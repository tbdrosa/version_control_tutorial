1.  How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was quite handy and allowed me to quickly figure out the difference between files.

2.  How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    For the long term this would allow me to notice how far I've come in terms of the applications lifetime.. where I started and where it is now. It will also help if I ever mess something up - so I have easy access to go back to a time when it was working.

3.  What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros are essentially, you have control of what gets saved (what is most important) this can be good since you are not overwhelmed with a lot of saved files and commits. Contrastingly, if you don't keep good repitition/ or a good track on saving this can also be bad as well.

4.  Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    This is a great aspect to VC because as recongized in a few examples, there are times where files will communicate between one another - this goes especailly for coding files. If you make changes that are across a series of files one would want to keep track in "one save". 

5. How can you use the commands git log and git diff to view the history of files?

    you can use git log --oneline to help you see the entire history of changes made to a specific directory you are working on. Additionally, with the git diff you can see the changes and differences made ebtween directories.

6.  How might using version control make you more confident to make changes that
could break something?

    Using VC would make me more confident because in the case that I mess something up, I am still able to go back into previous versions of my application to "checkout" and see if and when these errors were made. I can then restore these versions and fix the changes needed to fix it.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
